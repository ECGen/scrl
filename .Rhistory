library(rmarkdown)
render("scrl_report.Rmd")
ind.spp <- lapply(com, function(x, p) t.test(tapply(x, p, diff)), p = l.dat[, "Tree.pairs"])
isp <- apply(do.call(rbind, lapply(ind.spp, unlist)), 2, as.numeric)
isp
rownames(isp) <- names(ind.spp)
isp[, "p.value"] <- p.adjust(isp[, "p.value"], method = "fdr")
isp <- isp[order(isp[, "p.value"]), ]
isp
head(isp)
ind.spp <- lapply(com, function(x, p) t.test(tapply(x, p, diff)), p = l.dat[, "Tree.pairs"])
isp <- apply(do.call(rbind, lapply(ind.spp, unlist)), 2, as.numeric)
rownames(isp) <- names(ind.spp)
isp[, "p.value"] <- p.adjust(isp[, "p.value"], method = "fdr")
isp
kable
kable(isp)
isp.names <- as.character(na.omit(rownames(isp[isp[, "p.value"] < 0.05, ])))
isp.com <- com[,colnames(com) %in% isp.names]
isp.dif <- apply(isp.com, 2, function(x,y) tapply(x, y, diff), y = l.dat[ ,"Tree.pairs"])
isp.dif
kable(isp)
ind.spp <- lapply(com, function(x, p) t.test(tapply(x, p, diff)), p = l.dat[, "Tree.pairs"])
isp <- apply(do.call(rbind, lapply(ind.spp, unlist)), 2, as.numeric)
rownames(isp) <- names(ind.spp)
isp[, "p.value"] <- p.adjust(isp[, "p.value"], method = "fdr")
isp.all <- isp[, apply(isp, 2, function(x) any(is.na(x)))]
isp <- isp[order(isp[, "p.value"]), ]
kable(isp.all)
apply(isp, 2, function(x) any(is.na(x)))
isp.all <- isp[, !(apply(isp, 2, function(x) all(is.na(x))))]
isp.all
ind.spp <- lapply(com, function(x, p) t.test(tapply(x, p, diff)), p = l.dat[, "Tree.pairs"])
isp <- apply(do.call(rbind, lapply(ind.spp, unlist)), 2, as.numeric)
rownames(isp) <- names(ind.spp)
isp[, "p.value"] <- p.adjust(isp[, "p.value"], method = "fdr")
isp.all <- isp[, !(apply(isp, 2, function(x) all(is.na(x))))]
isp <- isp[order(isp[, "p.value"]), ]

isp.all
kable(isp.all)
isp.all <- isp.all[, c(1, 2, 3, 6, 4, 5)]
isp.all
ind.spp <- lapply(com, function(x, p) t.test(tapply(x, p, diff)), p = l.dat[, "Tree.pairs"])
isp <- apply(do.call(rbind, lapply(ind.spp, unlist)), 2, as.numeric)
rownames(isp) <- names(ind.spp)
isp[, "p.value"] <- p.adjust(isp[, "p.value"], method = "fdr")
isp.all <- isp[, !(apply(isp, 2, function(x) all(is.na(x))))]
isp <- isp[order(isp[, "p.value"]), ]

ind.spp <- lapply(com, function(x, p) t.test(tapply(x, p, diff)), p = l.dat[, "Tree.pairs"])
isp <- apply(do.call(rbind, lapply(ind.spp, unlist)), 2, as.numeric)
rownames(isp) <- names(ind.spp)
isp[, "p.value"] <- p.adjust(isp[, "p.value"], method = "fdr")
isp.all <- isp[, !(apply(isp, 2, function(x) all(is.na(x))))]
isp <- isp[order(isp[, "p.value"]), ]


c
colnames(com)
com[, "Brown.cr"]
?kable
write.csv(isp.all, file = "results/isp_table.csv")
write.csv(round(isp.all, 5), file = "results/scrl_isp_table.csv")
render("scrl_report.Rmd")
q()
n
loadd(env.dif)
rmarkdown::render("./scrl_report.Rmd")
env.dif
env.test.l[[1]]
env.test.l[[2]]
names(env.test.l)
unlist(env.test.l[[2]])
head(env.test..tab)
head(env.test.tab)
env.test.tab
env.test.tab
rmarkdown::render("./scrl_report.Rmd")
rmarkdown::render("./scrl_report.Rmd")
rmarkdown::render("./scrl_report.Rmd")
rmarkdown::render("./scrl_report.Rmd")
rmarkdown::render("./scrl_report.Rmd")
rmarkdown::render("./scrl_report.Rmd")
rmarkdown::render("./scrl_report.Rmd")
rmarkdown::render("./scrl_report.Rmd")
q()
n
installed.packages()[,1]
grep("xls", installed.packages()[,1])
grep("xls", installed.packages()[,1], val = TRUE)
install.packages("readxls")
readxl::read_xlsx("data/Vegetation.xlsx


str(veg)
l.dat
head(l.dat)
veg
l.dat
head(l.dat)
veg
veg[, 4]
as.data.framme(veg)[, 4]
as.data.frame(veg)[, 4]
read.csv(
l.raw <- read.csv("data/rawdata Sunset Crater for Matt.csv")
l.raw
l.raw[,1]
l.raw[,1]
l.raw[,2]
l.raw[,3]
l.raw[,4]
head(l.raw[,1])
l.raw[,1]
l.dat
head(l.dat)
tree.id
l.raw
veg
veg[, 1]
str(veg)
str(l.raw)
str(veg)
veg[["Tree ID"]]
le.raw[,1]
l.raw[,1] == le.raw[,1] 
all(l.raw[,1] == le.raw[,1] )
l.raw[[1]]
names(l.raw
)
head(l.raw[,1])
head(l.raw[[1]])
l.raw
l.raw
l.raw[, 2] == le.raw[, 2]
all(l.raw[, 2] == le.raw[, 2])
head(le.raw)
head(l.raw)
str(le.raw)
le.raw
l.raw
dim(l.raw)
dim(le.raw)
le.raw
dim(l.raw)
dim(l.raw) == dim(le.raw)
head(le.raw)
l.d
str(l.d)
head(l.d)
head(l.d[[1]])
l.d[[1]]
apply(l.d[[1]], 2, sum)
apply(l.d[[1]], 2, mean)
l.d
l.df
rownames(l.dat)
l.dat
str(l.dat)
l.dat[, 3]
l.dat
l.dat[, 3]
l.df
dim(l.df)
dim(l.dat)
trt
trt
do.call(rbind, trt)
trt
trt
tert
trt
trt
trt
trt
trt
tree
tree
moth.alive
moth.alive
tree
tree
moth.alive
l.df
head(l.df)
l.df
dim(l.df)
dim(l.dat)
str(l.dat)
l.df
l.dat
head(l.dat)
l.dat[, Tree.pairs]
l.dat[, "Tree.pairs"]
l.df[, "Tree.pairs"]
table(l.df[, "Tree.pairs"])
tree
l.df[,1]
data.frame(l.df[, "Tree.pairs"], l.dat[, "Tree.pairs"])
head(data.frame(l.df[, "Tree.pairs"], l.dat[, "Tree.pairs"]))
data.frame(l.df[, "Tree.pairs"], l.dat[, "Tree.pairs"])
head(l.df)
head(l.dat)
moth.alive[,1]
as.numeric(moth.alive[,1])
as.numeric(factor(moth.alive[,1]))
as.numeric(factor(moth.alive[,1])) -1
l.dat
head(l.dat)
l.df[, "Moth"]
head(l.df)
l.dat
head(l.dat)
l.df
l.df[, "Moth"]
l.dat
head(l.df)
moth.tree
rownames(l.dat)
head(l.df)
head(l.dat)
head(l.df)
head(l.dat)
head(l.df)
head(l.df)
colnames(l.df)
colnames(l.df) == colnames(l.dat)
colnames(l.df)
colnames(l.dat)
colnames(l.dat)
colnames(l.df)
head(l.dat)
l.df
m.v
veg
head(veg)
veg[1:10, 1:5]
v.dat
head(v.dat)
str(v.dat)
str(v.dat)
colnames(v.dat)
v.com
range(v.com)
range(v.com.rel)
v.com.ds.rel
min(v.com.ds.rel)
apply(v.com, 2, sum)
v.com.ds
v.com.ds.rel
range(v.com.ds.rel)
v.com
apply(v.com, 2, max)
apply(v.com, 2, range)
apply(v.com, 2, sd)
apply(v.com, 2, table)
library(vegan)
library(kable)
library(xtable)
library(knitr)
com.ds
q()
n
l.dat
head(l.dat)
l.df
m.v
veg[,"Tree ID"]
v.dat
rownames(l.df)
head(l.df)
l.dat
head(l.df)
rownames(l.dat)
rownames(l.df)
apply(v.com, 1, sum)
v.com
head(v.com)
head(veg)
str(veg)
v.env
head(v.com)
head(v.dat)
colnames(l.dat)
head(v.cat)
head(v.dat)
head(v.dat)
head(veg)
head(v.tp)
head(v.tp)
table(v.tp)
head(v.dat)
v.com
head(v.com)
head(v.dat)
head(v.dat)
colnames(v.dat)
v.dat[, "Species."]
v.dat[, "Species."] == apply(v.com, 1, function(x) sum(sign(x)))
all(v.dat[, "Species."] == apply(v.com, 1, function(x) sum(sign(x))))
colnames(v.dat)
colnames(l.dat)
colnames(l.dat)
?adonis2
isp.v
isp.v
colnames(isp.all.v)
isp.all.v
l.d
v.d
library(txtplot)
txtplot(v.d, l.d)
txtplot(v.d, l.d)
rmarkdown::render("scrl_report.Rmd", output_format = "pdf_document")
rmarkdown::render("scrl_report.Rmd", output_format = "pdf_document")
rmarkdown::render("scrl_report.Rmd", output_format = "pdf_document")
q()
n
